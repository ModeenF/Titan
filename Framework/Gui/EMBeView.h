/*******************************************************
* Creator: Martin Rudefelt
* Portability: native
*-------------------------------------------------------
* 
*******************************************************/

#include "EMGlobals.h"

#ifdef PLATFORM_BEOS

#ifndef __EM_BE_VIEW
#define __EM_BE_VIEW

#include <Rect.h>
#include <View.h>

class EMBeViewContainer;
class EMListener;

class EMBeView : public BView
{
public:
	EMBeView(EMBeViewContainer* p_opContainer, const BRect p_oFrame, uint32 p_vResizingMode, uint32 p_vFlags);
	~EMBeView();
	void AttachedToWindow();
	void Draw(const BRect p_oRect);
	void FrameResized(float p_vWidth, float p_vHeight);
	EMBeViewContainer* GetLastMouseDownView();
	void KeyDown(const char* vBytes, int32 vNrBytes);
	void KeyUp(const char* vBytes, int32 vNrBytes);
	void MessageReceived(BMessage* p_opMessage); // Needed to catch native messages
	void MouseDown(const BPoint p_oPoint);
	void MouseMoved(const BPoint p_oPoint, uint32 p_vTransit, const BMessage* p_opMessage);
	void MouseUp(const BPoint p_oPoint);

private:
	EMBeViewContainer* m_opContainer;
	static float m_opLastMouseDownCoordinateX;
	static float m_opLastMouseDownCoordinateY;
	static EMBeViewContainer* m_opLastMouseDownView;
	BPoint m_oPoint; // Checks is mouse has really moved (or an unnecessary event is generated by BeOS?)
};

#endif

#endif
