/*******************************************************
* Creator: Martin Rudefelt
* Portability: non-native
*-------------------------------------------------------
* 
*******************************************************/

#include "EMGlobals.h"

#ifndef __GUI_GLOBALS
#define __GUI_GLOBALS

const int32 EM_TINY_TRACK_HEIGHT = 17;
const int32 EM_SMALL_TRACK_HEIGHT = 31;
const int32 EM_NORMAL_TRACK_HEIGHT = 45;
const int32 EM_LARGE_TRACK_HEIGHT = 120;
const int32 EM_HUGE_TRACK_HEIGHT = 200;
const int32 EM_COLOSSAL_TRACK_HEIGHT = 300;
const int32 EM_LARGEST_TRACK_HEIGHT = 500;

//#define EM_COLOR_TRACK_BACKGROUND EMColor(150, 150, 200, 255)
#define EM_COLOR_ARM EMColor(255, 50, 50, 255)
#define EM_COLOR_MUTE_USER EMColor(200, 100, 200, 255)
#define EM_COLOR_MUTE_SOLO EMColor(180, 150, 180, 255)
#define EM_COLOR_SOLO EMColor(230, 230, 50, 255)
#define EM_COLOR_LOCK EMColor(150, 255, 255, 255)
#define EM_COLOR_RENDER EMColor(255, 180, 0, 255)
#define EM_COLOR_CLIP_SELECTION_BOX EMColor(0, 0, 255, 100)
#define EM_COLOR_CLIP_MOVE_BOX EMColor(0, 255, 0, 150)

#define EM_COLOR_AUDIO_VIEW_BACKGROUND EMColor(200, 255, 200, 255)
#define EM_COLOR_AUDIO_VIEW_HIGHLIGHT EMColor(240, 255, 240, 255)
#define EM_COLOR_AUDIO_VIEW_SHADOW EMColor(90, 170, 90, 255)
#define EM_COLOR_SELECTED_AUDIO_VIEW_BACKGROUND EMColor(150, 205, 150, 170)
#define EM_COLOR_SELECTED_AUDIO_VIEW_HIGHLIGHT EMColor(210, 245, 210, 170)
#define EM_COLOR_SELECTED_AUDIO_VIEW_SHADOW EMColor(30, 120, 30, 170)
#define EM_COLOR_MOVED_AUDIO_VIEW_BACKGROUND EMColor(100, 155, 100, 130)
#define EM_COLOR_MOVED_AUDIO_VIEW_HIGHLIGHT EMColor(200, 150, 150, 130)
#define EM_COLOR_MOVED_AUDIO_VIEW_SHADOW EMColor(20, 60, 20, 130)

#define EM_COLOR_VIDEO_VIEW_BACKGROUND EMColor(255, 200, 200, 255)
#define EM_COLOR_VIDEO_VIEW_HIGHLIGHT EMColor(255, 240, 240, 255)
#define EM_COLOR_VIDEO_VIEW_SHADOW EMColor(150, 60, 60, 255)
#define EM_COLOR_SELECTED_VIDEO_VIEW_BACKGROUND EMColor(205, 150, 150, 170)
#define EM_COLOR_SELECTED_VIDEO_VIEW_HIGHLIGHT EMColor(245, 210, 210, 170)
#define EM_COLOR_SELECTED_VIDEO_VIEW_SHADOW EMColor(120, 30, 30, 170)
#define EM_COLOR_MOVED_VIDEO_VIEW_BACKGROUND EMColor(155, 100, 100, 130)
#define EM_COLOR_MOVED_VIDEO_VIEW_HIGHLIGHT EMColor(200, 150, 150, 130)
#define EM_COLOR_MOVED_VIDEO_VIEW_SHADOW EMColor(60, 20, 20, 130)

#define EM_COLOR_MIDI_VIEW_BACKGROUND EMColor(200, 255, 255, 255)
#define EM_COLOR_MIDI_VIEW_HIGHLIGHT EMColor(240, 255, 255, 255)
#define EM_COLOR_MIDI_VIEW_SHADOW EMColor(60, 150, 150, 255)
#define EM_COLOR_SELECTED_MIDI_VIEW_BACKGROUND EMColor(150, 205, 205, 170)
#define EM_COLOR_SELECTED_MIDI_VIEW_HIGHLIGHT EMColor(210, 245, 245, 170)
#define EM_COLOR_SELECTED_MIDI_VIEW_SHADOW EMColor(30, 120, 120, 170)
#define EM_COLOR_MOVED_MIDI_VIEW_BACKGROUND EMColor(100, 155, 155, 130)
#define EM_COLOR_MOVED_MIDI_VIEW_HIGHLIGHT EMColor(150, 200, 200, 130)
#define EM_COLOR_MOVED_MIDI_VIEW_SHADOW EMColor(20, 60, 60, 130)

#define EM_COLOR_TRANSITION_VIEW_BACKGROUND EMColor(255, 200, 255, 255)
#define EM_COLOR_TRANSITION_VIEW_HIGHLIGHT EMColor(255, 240, 255, 255)
#define EM_COLOR_TRANSITION_VIEW_SHADOW EMColor(150, 60, 150, 255)
#define EM_COLOR_SELECTED_TRANSITION_VIEW_BACKGROUND EMColor(205, 150, 205, 170)
#define EM_COLOR_SELECTED_TRANSITION_VIEW_HIGHLIGHT EMColor(245, 210, 245, 170)
#define EM_COLOR_SELECTED_TRANSITION_VIEW_SHADOW EMColor(170, 30, 170, 170)
#define EM_COLOR_MOVED_TRANSITION_VIEW_BACKGROUND EMColor(155, 100, 155, 130)
#define EM_COLOR_MOVED_TRANSITION_VIEW_HIGHLIGHT EMColor(200, 150, 200, 130)
#define EM_COLOR_MOVED_TRANSITION_VIEW_SHADOW EMColor(60, 20, 60, 130)

const int32 FX_VALUE_BOX_WIDTH = 80;
const int32 FX_VALUE_BOX_X_SPACING = 5;
const int32 FX_VALUE_BOX_HEIGHT = 14; // Should be an even value
const int32 FX_NODE_WIDTH = 8;  // Should be an even value
const int32 FX_NODE_HEIGTH = 8;  // Should be an even value
const int32 FX_ACTIVE_NODE_WIDTH = 180;  // Should be an even value
const int32 FX_ACTIVE_NODE_HEIGTH = 14;  // Should be an even value
const int32 FX_NODE_X_SPACING = 5;

const int32 MIDI_KEY_HEIGHT = 9; // Should be an odd number
const int32 MIDI_MAX_NR_KEYS = 127;
const int32 MIDI_BLACK_KEY_WIDTH = 8; // How far black keys "stretches out" towards the pianist
const int32 MIDI_KEYS_IN_OCTAVE = 12;

enum HorizontalZoomScales
{
	ZOOM_SAMPLES_96000 = 10,
	ZOOM_SAMPLES_48000 = 20,
	ZOOM_SAMPLES_44100 = 22,
	ZOOM_SAMPLES_32000 = 31,
	ZOOM_SAMPLES_22050 = 45,
	ZOOM_FRAMES_24 = 500, // FIXME: Depends on vertical track height etc. ?
	ZOOM_FRAMES_25 = 510, // FIXME: Depends on vertical track height etc. ?
	ZOOM_FRAMES_30DROP = 520, // FIXME: Depends on vertical track height etc. ?
	ZOOM_FRAMES_30 = 530, // FIXME: Depends on vertical track height etc. ?
	ZOOM_1MS = 1000,
	ZOOM_10MS = 10000,
	ZOOM_100MS = 100000,
	ZOOM_1S = 1000000L,
	ZOOM_10S = 10000000L
};

enum SnappingMode
{
	SNAPPING_CLIPS,
	SNAPPING_GRID_MEASURE,
	SNAPPING_GRID_1_2,
	SNAPPING_GRID_BAR,
	SNAPPING_GRID_1_8,
	SNAPPING_GRID_1_16,
	SNAPPING_GRID_1_32,
	SNAPPING_GRID_1_64
};

enum ToolboxMode
{
	TOOLBOX_SCRUB = 0x1,
	TOOLBOX_CUT_PASTE = 0x2,
	TOOLBOX_RENAME = 0x4,
	TOOLBOX_RESIZE = 0x8,
	TOOLBOX_SELECT = 0x10,
	TOOLBOX_ERASE = 0x20,
	TOOLBOX_MUTE = 0x40,
	TOOLBOX_DRAW = 0x80,
	TOOLBOX_UNKNOWN = 0x100
};

#endif


